{"ast":null,"code":"import { EventEmitter } from \"@angular/core\";\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-toastr\";\nexport let CartService = /*#__PURE__*/(() => {\n  class CartService {\n    constructor(toastr) {\n      this.toastr = toastr;\n      this.itemChanged = new EventEmitter();\n      this.cartItems = [];\n      this.cartCount = 0;\n      this.subject = new BehaviorSubject(null);\n      this.countSubject = new BehaviorSubject(0);\n    }\n\n    addSingle(item) {\n      if (!this.cartItems.some(value => value.name === item.name)) {\n        this.cartItems.push(item);\n        this.itemChanged.emit(item);\n        this.cartCount++;\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    addItem(item) {\n      if (!this.cartItems.some(value => value.menu_id === item.menu_id)) {\n        this.cartItems.push(item);\n        this.cartCount++;\n        this.countSubject.next(this.cartCount);\n        this.itemChanged.emit(this.cartItems);\n        this.toastr.success('Item Added In Cart !', 'Success', {\n          enableHtml: true,\n          closeButton: true,\n          timeOut: 10000\n        }); // this.toastr.success('Item Added In Cart !',  {enableHtml: true,\n        // closeButton: true,\n        // timeOut: 10000});\n\n        return this.subject.next(this.cartItems);\n      } else {\n        this.toastr.warning('Item Already In Cart !');\n      } // this.cartItems.push(item);\n\n    }\n\n    removeCartItem(index) {\n      this.cartItems.splice(index, 1);\n      this.cartCount--;\n      this.itemChanged.emit(this.cartItems);\n      this.toastr.success('Item Removed !');\n      return this.countSubject.next(this.cartCount);\n    }\n\n    getCartCount() {\n      return this.countSubject.next(this.cartCount);\n    }\n\n    afterLogin(item) {\n      this.itemChanged.emit(item);\n      return this.subject.next(item);\n    }\n\n  }\n\n  CartService.ɵfac = function CartService_Factory(t) {\n    return new (t || CartService)(i0.ɵɵinject(i1.ToastrService));\n  };\n\n  CartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CartService,\n    factory: CartService.ɵfac,\n    providedIn: \"root\"\n  });\n  return CartService;\n})();","map":null,"metadata":{},"sourceType":"module"}