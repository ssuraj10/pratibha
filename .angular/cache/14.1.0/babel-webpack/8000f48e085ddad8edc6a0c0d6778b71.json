{"ast":null,"code":"import { EventEmitter } from \"@angular/core\";\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let CartService = /*#__PURE__*/(() => {\n  class CartService {\n    constructor() {\n      this.itemChanged = new EventEmitter();\n      this.cartItems = [];\n      this.cartCount = 0;\n      this.subject = new BehaviorSubject(null);\n      this.countSubject = new BehaviorSubject(0);\n    }\n\n    addSingle(item) {\n      if (!this.cartItems.some(value => value.name === item.name)) {\n        this.cartItems.push(item);\n        this.itemChanged.emit(item);\n        this.cartCount++;\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    addItem(item) {\n      this.cartItems.push(item);\n      this.countSubject.next(cartCount);\n      return this.subject.next(this.cartItems);\n    }\n\n    removeCartItem(index) {\n      this.countSubject.next(cartCount);\n      this.cartItems.splice(index, 1);\n    }\n\n    getCartCount() {\n      this.countSubject.next(cartCount);\n      return this.cartCount;\n    }\n\n  }\n\n  CartService.ɵfac = function CartService_Factory(t) {\n    return new (t || CartService)();\n  };\n\n  CartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CartService,\n    factory: CartService.ɵfac,\n    providedIn: \"root\"\n  });\n  return CartService;\n})();","map":null,"metadata":{},"sourceType":"module"}